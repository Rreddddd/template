<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.UserDao">

    <resultMap id="user" type="User">
        <id column="uId" property="id"/>
        <result column="account" property="account"/>
        <result column="password" property="password"/>
        <result column="uName" property="name"/>
        <result column="phone" property="phone"/>
        <result column="email" property="email"/>
        <result column="head_img" property="headImg"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="freeze" property="freeze"/>
    </resultMap>

    <resultMap id="userWithPosition" type="User" extends="user">
        <collection property="positions" javaType="ArrayList" ofType="Position">
            <id column="pId" property="id"/>
            <result column="pName" property="name"/>
            <result column="visible" property="visible"/>
        </collection>
    </resultMap>

    <sql id="position_fields">
        p.id as pId,
            p.name as pName,
            p.visible
    </sql>

    <sql id="user_fields">
        u.id as uId,
        u.account,
        u.password,
        u.name as uName,
        u.phone,
        u.email,
        u.head_img,
        u.create_time,
        u.freeze
    </sql>

    <sql id="user_position_fields">
        <include refid="user_fields"/>
        ,
        <include refid="position_fields"/>
    </sql>

    <sql id="sets">
        <if test="account!=null">
            u.account=#{account},
        </if>
        <if test="password!=null">
            u.password=#{password},
        </if>
        <if test="name!=null">
            u.name=#{name},
        </if>
        u.phone=#{phone},
        u.email=#{email},
        u.head_img=#{headImg},
        u.freeze=#{freeze}
    </sql>

    <select id="findByAccount" parameterType="String" resultMap="user">
        select
        <include refid="user_position_fields"/>
        from user u left join user_position up on u.id = up.user_id
        left join position p on up.position_id = p.id
        where u.account = #{account}
    </select>

    <select id="findAll" resultMap="user">
        select
        <include refid="user_fields"/>
        from user u
    </select>

    <select id="getWithPositionAll" resultMap="userWithPosition">
        select
        <include refid="user_position_fields"/>
        from user u left join user_position up on u.id = up.user_id
        left join position p on up.position_id = p.id
    </select>

    <select id="findById" resultMap="user">
        select
        <include refid="user_fields"/>
        from user u
        where u.id = #{id}
    </select>

    <select id="findWidthPositionById" resultMap="userWithPosition">
        select
        <include refid="user_position_fields"/>
        from user u left join user_position up on u.id = up.user_id
        left join position p on up.position_id = p.id
        where u.id = #{id}
    </select>

    <insert id="add" useGeneratedKeys="true" keyProperty="id" parameterType="User">
        insert into user
        values (null, #{account}, #{password}, #{name}, #{phone}, #{email}, #{headImg}, #{createTime}, #{freeze});
    </insert>

    <update id="update" parameterType="User">
        update user u set
        <include refid="sets"/>
        where u.id = #{id}
    </update>

    <update id="freeze">
        update user u set
        u.freeze=#{freeze}
        where u.id = #{id}
    </update>

    <delete id="delete">
        delete
        from user
        where id = #{id}
    </delete>
</mapper>